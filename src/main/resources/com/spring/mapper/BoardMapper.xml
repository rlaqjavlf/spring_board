<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.spring.mapper.BoardMapper">
		
		<!-- 게시글 삽입시 필요한 bno(pk)값을 
		미리 sql을 통해서 처리해두고 특정이름으로 결과를 보관 -->
		<insert id="insertSelectKey">
			<selectKey keyProperty="bno" order="BEFORE" resultType="int">
				select seq_board.nextVal from dual
			</selectKey>
				insert into SPRING_BOARD(bno,title,content,writer)
				values(#{bno}, #{title},#{content},#{writer})
		</insert>
		
		<!-- 
		<select id="getList" resultType="com.spring.domain.BoardVO">
				select * from SPRING_BOARD order by bno desc
		</select>
		 -->
		 
		 <!-- 페이징 -->
		<select id="getList" resultType="com.spring.domain.BoardVO">
				<!-- CDATA 꺽새적용하게 해주는거 -->
				<![CDATA[	
				select bno,title,writer,content, reqdate,updatedate,replyCnt
				from (select /*+INDEX_DESC(spring_board pk_spring_board)*/
				rownum rn, bno,title, writer,content,reqdate,updatedate,replyCnt from SPRING_BOARD
				where 
				]]>
					<include refid="criteria"></include>
				<![CDATA[
				rownum <=(#{pageNum}*#{amount})) where rn>(#{pageNum}-1)*#{amount}
				]]>
		</select>
		 
		 <!-- 전체 게시물 수 구하기 -->
		 <select id="totalCnt" resultType="int">
		 	select count(*)
		 	from spring_board
		 	where 
		 		<include refid="criteria"></include>
		 	bno>0
		 </select>
		 
		 
		<select id="read" resultType="com.spring.domain.BoardVO">
			select *from SPRING_BOARD where bno= #{bno}
		</select>
		
		<update id="modify">
			update SPRING_BOARD set title=#{title}, content=#{content},updatedate=sysdate where bno=#{bno}
		</update>
		
		<delete id="remove">
			delete from SPRING_BOARD where bno=#{bno}
		</delete>
		
		<update id="updateReplyCnt">
			update spring_board set replyCnt = replyCnt+#{amount} where bno=#{bno}
		
		</update>
		
		<!-- 검색처리를 위한 동적 SQL문  : 재사용을 할수있다 (include 사용해서)
				prefixOverrides -> 무시한단어
		-->
		<sql id="criteria">
			<trim prefix ="(" suffix=") AND" prefixOverrides ="OR"> 
				<foreach item="type" collection="typeArr">
					<trim prefix="OR">
						<choose>
							<when test="type =='T'.toString()">
								title like '%' || #{keyword}||'%'
							</when>

							<when test="type =='C'.toString()">
								content like '%' || #{keyword}||'%'
							</when>

							<when test="type =='W'.toString()">
								writer like '%' || #{keyword}||'%'
							</when>
						</choose>
					</trim>
				</foreach>			
			</trim>
		</sql>
</mapper>